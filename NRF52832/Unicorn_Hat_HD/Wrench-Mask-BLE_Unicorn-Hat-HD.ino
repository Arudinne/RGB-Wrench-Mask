/*  Wrench Mask - BLE Version (NRF52832)
 *  
 *  Hardware Used:
 *  Adafruit Feather NRF52
 *  Pimoroni Unicorn Hat HD
 *  
 *  by Brandon C. Allen 
 *  
 *  Based on the bleuart example from AdaFruit:
 *  https://github.com/adafruit/Adafruit_nRF52_Arduino/blob/master/libraries/Bluefruit52Lib/examples/Peripheral/bleuart/bleuart.ino
 *  
*/

// Byte Masks for facial expressions

#define ROW_SIZE 16

//  X_X - face001

byte face001_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face001_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
  {0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
 
// >_< - Face002

byte face002_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0},
  {0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face002_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// ^_^ - Face003

byte face003_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face003_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// @_@ - Face004

byte face004_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0},
  {0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0},
  {0,0,1,1,0,0,1,1,1,1,0,1,0,1,0,0},
  {0,0,1,1,0,1,1,0,0,0,1,1,0,1,0,0},
  {0,0,1,1,0,1,1,0,0,0,1,0,0,1,0,0},
  {0,0,1,1,0,1,0,0,0,0,1,0,0,1,0,0},
  {0,0,1,1,0,1,0,0,0,1,1,0,1,1,0,0},
  {0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face004_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0},
  {0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0},
  {0,0,1,1,0,0,1,1,1,1,0,1,0,1,0,0},
  {0,0,1,1,0,1,1,0,0,0,1,1,0,1,0,0},
  {0,0,1,1,0,1,1,0,0,0,1,0,0,1,0,0},
  {0,0,1,1,0,1,0,0,0,0,1,0,0,1,0,0},
  {0,0,1,1,0,1,0,0,0,1,1,0,1,1,0,0},
  {0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// /_\ - Face005

byte face005_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face005_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// ?_? - Face006

byte face006_Left [][ROW_SIZE] = {
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
};

byte face006_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
};
 
// O_o - Face007

byte face007_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face007_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
 
// \_/ - Face008

byte face008_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face008_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
 
// Z_Z - Face009

byte face009_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face009_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// #_# - Face010

byte face010_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0},
};

byte face010_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0},
};
 
// =_= - Face011

byte face011_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0},
  {0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face011_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
 
// ~_^ - Face012

byte face012_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,0,1,1,0,0},
  {0,0,0,0,1,0,0,0,1,1,1,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face012_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// 9_9 - Face013

byte face013_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face013_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
 
// !_! - Face014

byte face014_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face014_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// *_* - Face015

byte face015_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face015_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,1,0,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// `_` - Face016

byte face016_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face016_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
 
// ;_; - Face017

byte face017_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face017_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// .)_.) - Face018

byte face018_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
};

byte face018_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0},
};

// (._(. - Face019

byte face019_Left [][ROW_SIZE] = {
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
};

byte face019_Right [][ROW_SIZE] = {
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
};

// o_O - Face020

byte face020_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face020_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// ._. - Face021

byte face021_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face021_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// ⌐_⌐ - Face022

byte face022_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face022_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// <3_<3 - Face023

byte face023_Left [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0},
  {0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0},
  {1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0},
  {1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0},
  {0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0},
  {0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

byte face023_Right [][ROW_SIZE] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0},
  {0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0},
  {1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0},
  {1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0},
  {0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0},
  {0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0},
  {0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,0},
  {0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// Umbrella Logo

byte face024_Red [][ROW_SIZE] = {
  {0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1},
  {0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0},
  {0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0},
  {0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0},
  {0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0},
  {1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1},
  {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0},
  {0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0},
  {0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0},
};

byte face024_White [][ROW_SIZE] = {
  {0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0},
  {1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1},
  {0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
  {0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0},
  {1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1},
  {0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0},
  {0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0},
  {0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0},
};

#include <bluefruit.h>
#include <SPI.h>
#include <Unicorn_Hat_HD.h>

const int slaveSelectPinA = 7;
const int slaveSelectPinB = 27;

// BLE Service
BLEDis  bledis;
BLEUart bleuart;
BLEBas  blebas;

// Define the matrix CS pins
Unicorn_Hat_HD lefteye = Unicorn_Hat_HD(slaveSelectPinA);
Unicorn_Hat_HD righteye = Unicorn_Hat_HD(slaveSelectPinB);

// Define color parameters
uint32_t colorRed = 0xFF0000;
uint32_t colorGreen = 0x00FF00;
uint32_t colorBlue = 0x0000FF;
uint32_t colorWhite = 0xFFFFFF;

// Define initial color
uint32_t color = colorWhite;

// Define Variables for blinking the LEDs
unsigned long currentMillis = 0;
unsigned long previousMillis = 0;
int ledState = 0; //
long OnTime = 6000; // milliseconds of on-time
long OffTime = 70; // milliseconds of off-time
byte EyeBrightness = 50;

// Initialize boolean variables for face status checks when switching faces

//Startup
bool startupCheck = false;
bool drawGivenMask(int row, int col, byte mask[][ROW_SIZE])
{
  col = col % ROW_SIZE;
  if (mask[row][col] & 1){
    return true;
  }
  return false;
}

void setup()
{
  lefteye.begin();
  righteye.begin();
  lefteye.setBrightness(EyeBrightness);
  righteye.setBrightness(EyeBrightness);
  lefteye.show(); 
  righteye.show();
  
  Serial.begin(115200); // Enable Serial for debugging purposes
  Serial.println("=======================================");
  Serial.println("||   Begin RGB Wrnech Mask Program   ||");
  Serial.println("|| Opening Serial port for Debugging ||");
  Serial.println("=======================================");

  //Configure BLE
  Bluefruit.begin();
  // Set Max power. Accepted values are: -40, -30, -20, -16, -12, -8, -4, 0, 4
  Bluefruit.setTxPower(4);
  Bluefruit.setName("Wrench Mask");
  Bluefruit.setConnectCallback(connect_callback);
  Bluefruit.setDisconnectCallback(disconnect_callback);

  // Configure and Start Device Information Service
  bledis.setManufacturer("Adafruit Industries");
  bledis.setModel("Bluefruit Feather52");
  bledis.begin();

  // Configure and Start BLE Uart Service
  bleuart.begin();

  // Start BLE Battery Service
  blebas.begin();
  blebas.write(100);

  // Set up and start advertising
  startAdv();
  Face001();
}

void startAdv(void)
{
  // Advertising packet
  Bluefruit.Advertising.addFlags(BLE_GAP_ADV_FLAGS_LE_ONLY_GENERAL_DISC_MODE);
  Bluefruit.Advertising.addTxPower();

  // Include bleuart 128-bit uuid
  Bluefruit.Advertising.addService(bleuart);

  // Secondary Scan Response packet (optional)
  // Since there is no room for 'Name' in Advertising packet
  Bluefruit.ScanResponse.addName();
  
  /* Start Advertising
   * - Enable auto advertising if disconnected
   * - Interval:  fast mode = 20 ms, slow mode = 152.5 ms
   * - Timeout for fast mode is 30 seconds
   * - Start(timeout) with timeout = 0 will advertise forever (until connected)
   * 
   * For recommended advertising interval
   * https://developer.apple.com/library/content/qa/qa1931/_index.html   
   */
  Bluefruit.Advertising.restartOnDisconnect(true);
  Bluefruit.Advertising.setInterval(32, 244);    // in unit of 0.625 ms
  Bluefruit.Advertising.setFastTimeout(30);      // number of seconds in fast mode
  Bluefruit.Advertising.start(0);                // 0 = Don't stop advertising after n seconds  
}

void loop()
{ 
  // Respond to command and forward from BLEUART to HW Serial for Debugging
  while ( bleuart.available() )
  {
    uint8_t ch;
    ch = (uint8_t) bleuart.read();
    Serial.print("Received Command: ");
    Serial.write(ch);
    Serial.println("");
    switch (ch) 
   {
    case 0x2B: IncrementBrightness(); break;
    case 0x2D: DecrementBrightness(); break;
    case 0x30: Face010(); break; // Draw Face010
    case 0x31: Face001(); break; // Draw Face001
    case 0x32: Face002(); break; // Draw Face002
    case 0x33: Face003(); break; // Draw Face003
    case 0x34: Face004(); break; // Draw Face004
    case 0x35: Face005(); break; // Draw Face005
    case 0x36: Face006(); break; // Draw Face006
    case 0x37: Face007(); break; // Draw Face007
    case 0x38: Face008(); break; // Draw Face008
    case 0x39: Face009(); break; // Draw Face009
    case 0x41: Face011(); break; // Draw Face011
    case 0x42: Face012(); break; // Draw Face012
    case 0x43: Face013(); break; // Draw Face013
    case 0x44: Face014(); break; // Draw Face014
    case 0x45: Face015(); break; // Draw Face015
    case 0x46: Face016(); break; // Draw Face016
    case 0x47: Face017(); break; // Draw Face017
    case 0x48: Face018(); break; // Draw Face018
    case 0x49: Face019(); break; // Draw Face019
    case 0x4A: Face020(); break; // Draw Face020
    case 0x4B: Face021(); break; // Draw Face021
    case 0x4C: Face022(); break; // Draw Face022
    case 0x4D: Face023(); break; // Draw Face023
    case 0x4E: Umbrella(); break; // Draw Umbrella Corp logo
    case 0x57: setFaceColor(colorRed); break;
    case 0x58: setFaceColor(colorGreen); break;
    case 0x59: setFaceColor(colorBlue); break;
    case 0x5A: setFaceColor(colorWhite); break;
   }
  }
  BlinkFunction();
}

void connect_callback(uint16_t conn_handle)
{
  char central_name[32] = { 0 };
  Bluefruit.Gap.getPeerName(conn_handle, central_name, sizeof(central_name));

  Serial.print("Connected to ");
  Serial.println(central_name);
}

void disconnect_callback(uint16_t conn_handle, uint8_t reason)
{
  (void) conn_handle;
  (void) reason;

  Serial.println();
  Serial.println("Disconnected");
}

/**
 * RTOS Idle callback is automatically invoked by FreeRTOS
 * when there are no active threads. E.g when loop() calls delay() and
 * there is no bluetooth or hw event. This is the ideal place to handle
 * background data.
 * 
 * NOTE: It is recommended to call waitForEvent() to put MCU into low-power mode
 * at the end of this callback. You could also turn off other Peripherals such as
 * Serial/PWM and turn them back on if wanted
 * 
 * e.g
 * 
 * void rtos_idle_callback(void)
 * {
 *    Serial.stop(); // will lose data when sleeping
 *    waitForEvent();
 *    Serial.begin(115200); 
 * }
 * 
 * NOTE2: If rtos_idle_callback() is not defined at all. Bluefruit will force
 * waitForEvent() to save power. If you don't want MCU to sleep at all, define
 * an rtos_idle_callback() with empty body !
 * 
 * WARNING: This function MUST NOT call any blocking FreeRTOS API 
 * such as delay(), xSemaphoreTake() etc ... for more information
 * http://www.freertos.org/a00016.html
 */
void rtos_idle_callback(void)
{
  // Don't call any other FreeRTOS blocking API()
  // Perform background task(s) here

  // Request CPU to enter low-power mode until an event/interrupt occurs
  waitForEvent();
}

void Face001()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face001_Left);
  maskedColorWipeRightEye(color, face001_Right);
}
// Draw Face002
void Face002()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face002_Left);
  maskedColorWipeRightEye(color, face002_Right);
}
// Draw Face003
void Face003()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face003_Left);
  maskedColorWipeRightEye(color, face003_Right);
}   
// Draw Face004
void Face004()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face004_Left);
  maskedColorWipeRightEye(color, face004_Right);
}
// Draw Face005
void Face005()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face005_Left);
  maskedColorWipeRightEye(color, face005_Right);
}
// Draw Face006
void Face006()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face006_Left);
  maskedColorWipeRightEye(color, face006_Right);
}
// Draw Face007
void Face007()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face007_Left);
  maskedColorWipeRightEye(color, face007_Right);
}
// Draw Face008
void Face008()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face008_Left);
  maskedColorWipeRightEye(color, face008_Right);
}
// Draw Face009
void Face009()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face009_Left);
  maskedColorWipeRightEye(color, face009_Right);
}
// Draw Face010
void Face010()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face010_Left);
  maskedColorWipeRightEye(color, face010_Right);
}
// Draw Face011
void Face011()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face011_Left);
  maskedColorWipeRightEye(color, face011_Right);
}
// Draw Face012
void Face012()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face012_Left);
  maskedColorWipeRightEye(color, face012_Right);
}
// Draw Face013
void Face013()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face013_Left);
  maskedColorWipeRightEye(color, face013_Right);
}
// Draw Face014
void Face014()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face014_Left);
  maskedColorWipeRightEye(color, face014_Right);
}
// Draw Face015
void Face015()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face015_Left);
  maskedColorWipeRightEye(color, face015_Right);
}
// Draw Face016
void Face016()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face016_Left);
  maskedColorWipeRightEye(color, face016_Right);
}
// Draw Face017
void Face017()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face017_Left);
  maskedColorWipeRightEye(color, face017_Right);
}
// Draw Face018
void Face018()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face018_Left);
  maskedColorWipeRightEye(color, face018_Right);
}
void Face019()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face019_Left);
  maskedColorWipeRightEye(color, face019_Right);
}
// Draw Face020
void Face020()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face020_Left);
  maskedColorWipeRightEye(color, face020_Right);
}
// Draw Face021
void Face021()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face021_Left);
  maskedColorWipeRightEye(color, face021_Right);
}
// Draw Face022
void Face022()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face022_Left);
  maskedColorWipeRightEye(color, face022_Right);
}
// Draw Face023
void Face023()
{
  lefteye.clear();
  righteye.clear();
  maskedColorWipeLeftEye(color, face023_Left);
  maskedColorWipeRightEye(color, face023_Right);
}

// Umbrella Logo
void Umbrella()
{
  DrawUmbrella();
}

void IncrementBrightness()
{
  if (EyeBrightness < 255){
    EyeBrightness += 1;
    Serial.println("Incrementing Brightness by 1");
    Serial.print("Brightness:");
    Serial.println(EyeBrightness);
    lefteye.setBrightness(EyeBrightness);
    righteye.setBrightness(EyeBrightness);
    lefteye.show(); 
    righteye.show();
  }
  else if(EyeBrightness = 255){
    Serial.println("Brightness already at maximum");
  }  
}

void DecrementBrightness()
{
  if (EyeBrightness > 1){
    EyeBrightness -= 1;
    Serial.println("Decrementing Brightness by 1");
    Serial.print("Brightness:");
    Serial.println(EyeBrightness);
    lefteye.setBrightness(EyeBrightness);
    righteye.setBrightness(EyeBrightness);
    lefteye.show(); 
    righteye.show();
  }
  else if(EyeBrightness = 1){
    Serial.println("Brightness already at minimum");
  }  
}

void maskedColorWipeLeftEye(uint32_t color, byte mask[][ROW_SIZE])
{
  uint16_t i, j;
 
  for(i=0; i<256; i++) {
    if (drawGivenMask(i / ROW_SIZE, i % ROW_SIZE, mask)){
      lefteye.setPixelColor(i, color);
    }
    else{
      lefteye.setPixelColor(i, 0);
    }
  }
   
  lefteye.show();
  delay(1);
}

void maskedColorWipeRightEye(uint32_t color, byte mask[][ROW_SIZE])
{
  uint16_t i, j;
 
  for(i=0; i<256; i++) {
    if (drawGivenMask(i / ROW_SIZE, i % ROW_SIZE, mask)){
      righteye.setPixelColor(i, color);
    }
    else{
      righteye.setPixelColor(i, 0);
    }
  }
   
  righteye.show();
  delay(1);
}

void dualMaskedColorWipeLeftEye(uint32_t color, uint32_t color2, byte mask[][ROW_SIZE], byte mask2[][ROW_SIZE])
{
  uint16_t i, j;
 
  for(i=0; i<256; i++) {
    if (drawGivenMask(i / ROW_SIZE, i % ROW_SIZE, mask)){
      lefteye.setPixelColor(i, color);
    }
    else if(drawGivenMask(i / ROW_SIZE, i % ROW_SIZE, mask2)){
      lefteye.setPixelColor(i, color2);
    }
    else{
      lefteye.setPixelColor(i, 0);
    }
  }
   
  lefteye.show();
  delay(1);
}

void dualMaskedColorWipeRightEye(uint32_t color, uint32_t color2, byte mask[][ROW_SIZE], byte mask2[][ROW_SIZE])
{
  uint16_t i, j;
 
  for(i=0; i<256; i++) {
    if (drawGivenMask(i / ROW_SIZE, i % ROW_SIZE, mask)){
      righteye.setPixelColor(i, color);
    }
    else if(drawGivenMask(i / ROW_SIZE, i % ROW_SIZE, mask2)){
      righteye.setPixelColor(i, color2);
    }
    else{
      righteye.setPixelColor(i, 0);
    }
  }
   
  righteye.show();
  delay(1);
}

void BlinkFunction()
{
  currentMillis = millis(); // Set variable to see if it's time to change the state of the LEDs
  if ((ledState == 0) && (currentMillis - previousMillis >= OffTime)) // Turn on the LEDs 
  {
    ledState = 1; // Set the LEDs status to on
    previousMillis = currentMillis;   // Remember the time
    Serial.println("Blink - LEDs ON"); // Debug output
    lefteye.setBrightness(EyeBrightness);
    righteye.setBrightness(EyeBrightness);
    lefteye.show(); 
    righteye.show();
  }
  else if((ledState == 1) && (currentMillis - previousMillis >= OnTime)) // Blink off the LEDs 
  {
    ledState = 0; // Set the LEDs status to off
    previousMillis = currentMillis; // Remember the time
    Serial.println("Blink - LEDs OFF");
    lefteye.setBrightness(0);
    righteye.setBrightness(0);
    lefteye.show(); 
    righteye.show();
    
  }
  delay(10);
}

void setFaceColor(uint32_t colorVariable)
{
  color=colorVariable;
}

void DrawUmbrella()
{
  lefteye.clear();
  righteye.clear();
  dualMaskedColorWipeLeftEye(colorRed, colorWhite, face024_Red, face024_White);
  dualMaskedColorWipeRightEye(colorRed, colorWhite, face024_Red, face024_White); 
}
